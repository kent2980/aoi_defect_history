name: Build Windows Executables

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        architecture: [x64, x86]
        include:
          - architecture: x64
            python-arch: x64
            output-name: aoi-defect-history-win64
          - architecture: x86
            python-arch: x86
            output-name: aoi-defect-history-win32

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        architecture: ${{ matrix.python-arch }}

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Install dependencies
      run: |
        # 32bit環境では事前ビルド済みホイールを使用
        if ("${{ matrix.architecture }}" -eq "x86") {
          uv pip install --only-binary=all pandas numpy
        }
        # テスト依存関係を除外してインストール
        uv sync --frozen --no-dev
        uv pip install pyinstaller
      shell: powershell

    - name: Build executable with PyInstaller
      run: |
        $env:TARGET_ARCH = "${{ matrix.architecture }}"
        uv run pyinstaller pyinstaller.spec
      shell: powershell

    - name: Verify build and create package
      run: |
        $outputName = "${{ matrix.output-name }}"
        $distDir = "dist\$outputName"
        
        if (Test-Path "$distDir\$outputName.exe") {
          Write-Host "✓ Executable built successfully"
          
          # 実行ファイルの情報表示
          Get-Item "$distDir\$outputName.exe" | Select-Object Name, Length, LastWriteTime
          
          # 配布パッケージの内容確認
          Write-Host ""
          Write-Host "Package contents:"
          Get-ChildItem $distDir | Select-Object Name, Length
          
          # フルパッケージとしてZIP作成
          $zipPath = "dist\$outputName-full.zip"
          if (Test-Path $zipPath) { Remove-Item $zipPath }
          Compress-Archive -Path $distDir -DestinationPath $zipPath
          Write-Host "✓ Created full package: $zipPath"
          
          # 実行ファイルのみもコピー（後方互換性）
          Copy-Item "$distDir\$outputName.exe" "dist\$outputName.exe"
          Write-Host "✓ Created standalone executable: dist\$outputName.exe"
          
        } else {
          Write-Host "❌ Build failed - executable not found"
          if (Test-Path "dist") {
            Write-Host "Available files in dist:"
            Get-ChildItem "dist" -Recurse | Select-Object FullName, Length
          }
          exit 1
        }
      shell: powershell

    - name: Upload full package (recommended)
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.output-name }}-full
        path: dist/${{ matrix.output-name }}-full.zip
        retention-days: 30

    - name: Upload standalone executable
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.output-name }}
        path: dist/${{ matrix.output-name }}.exe
        retention-days: 30

  create-release:
    needs: build-windows
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: Prepare release files
      run: |
        mkdir -p ./release-files
        # Copy executables from artifact directories
        cp ./artifacts/aoi-defect-history-win64/aoi-defect-history-win64.exe ./release-files/
        cp ./artifacts/aoi-defect-history-win32/aoi-defect-history-win32.exe ./release-files/
        
        # Copy full packages
        cp ./artifacts/aoi-defect-history-win64-full/aoi-defect-history-win64-full.zip ./release-files/
        cp ./artifacts/aoi-defect-history-win32-full/aoi-defect-history-win32-full.zip ./release-files/
        
        ls -la ./release-files/

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ./release-files/aoi-defect-history-win64.exe
          ./release-files/aoi-defect-history-win32.exe
          ./release-files/aoi-defect-history-win64-full.zip
          ./release-files/aoi-defect-history-win32-full.zip
        draft: false
        prerelease: false
        generate_release_notes: true
        body: |
          ## ダウンロード

          ### 単体実行ファイル
          - `aoi-defect-history-win64.exe` - 64bit Windows用実行ファイル
          - `aoi-defect-history-win32.exe` - 32bit Windows用実行ファイル
          
          ### フルパッケージ（推奨）
          - `aoi-defect-history-win64-full.zip` - 64bit用フルパッケージ（実行ファイル + CSV設定ファイル）
          - `aoi-defect-history-win32-full.zip` - 32bit用フルパッケージ（実行ファイル + CSV設定ファイル）
          
          **注意**: フルパッケージには編集可能なCSVファイル（defect_mapping.csv、user.csv）が含まれています。
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}